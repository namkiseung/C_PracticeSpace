// SocketClient.cpp : 콘솔 응용 프로그램에 대한 진입점을 정의합니다.
//

#include "stdafx.h"
#include <winsock2.h>
#pragma comment(lib, "ws2_32.lib")
#include <windows.h>
#include <atlbase.h>

#include <Windows.h>
#include <stdio.h>
#include <conio.h>
#include <tchar.h>
#include <tlhelp32.h>

#define LIMBEST_DATA_LEN 1024
#define FILENAME_RESULT "cmdresult.txt"

// 참고: 프로그램실행 관련코드, 윈도우 API 호출을 고려하여 UNICODE 지원
int main(int argc, TCHAR* argv[])
{

	PROCESSENTRY32 pe32;
	HANDLE hProcess;
	static int count = 0;
	char str[1000][1024];
	hProcess = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
	pe32.dwSize = sizeof(PROCESSENTRY32);
	if (Process32First(hProcess, &pe32))
	{
		do
		{
			//printf("Parent %ld Process ID %ld Process Name %s\n", pe32.th32ParentProcessID, pe32.th32ProcessID, pe32.szExeFile);
			sprintf(str[count], "%s", pe32.szExeFile);
			//printf("%s", str[count]);
			count++;
		} while (Process32Next(hProcess, &pe32));
	}
	CloseHandle(hProcess);

	WORD wVersionRequested;
	WSADATA wsaData;
	int nResult = 0;

	wVersionRequested = MAKEWORD(2, 2);
	nResult = WSAStartup(wVersionRequested, &wsaData);

	SOCKET hSockClient = socket(PF_INET, SOCK_STREAM, 0);

	SOCKADDR_IN sockAddrClient;
	::ZeroMemory(&sockAddrClient, sizeof(sockAddrClient));
	sockAddrClient.sin_family = AF_INET;

	USES_CONVERSION;
	sockAddrClient.sin_addr.s_addr = inet_addr("192.168.43.111");
	sockAddrClient.sin_port = htons(2202);

	nResult = connect(hSockClient, (SOCKADDR *)&sockAddrClient, sizeof(sockAddrClient));

	int nTransfer = 0;
	int nTotal = 0;

	for (int i = 0; i < count--; i++) {
		printf("%s\n", str[i]);
		send(hSockClient, str[i], 1024, 0);
	}

	send(hSockClient, "done", 1024, 0);

	//send(hSockClient, str[nTotal], 1024, 0);

	//nTransfer = recv(hSockClient, bufData + nTotal, sizeof(sockAddrClient), 0);

	//bufData[1024] = '\0';

	closesocket(hSockClient);
	WSACleanup();

	_getch();
	return 0;
}

